name: CI/CD Pipeline

on:
  push:
    branches:
      - main
      - feature/*
  pull_request:
    branches:
      - main

env:
  ALERT_THRESHOLD_RSI_OVERBOUGHT: ${{ vars.ALERT_THRESHOLD_RSI_OVERBOUGHT }}
  ALERT_THRESHOLD_RSI_OVERSOLD: ${{ vars.ALERT_THRESHOLD_RSI_OVERSOLD }}
  ALERT_THRESHOLD_VOLUME_SPIKE: ${{ vars.ALERT_THRESHOLD_VOLUME_SPIKE }}

jobs:
  build-and-test:
    runs-on: [self-hosted, ARM64, TradingBot]

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Cache .NET installation
      uses: actions/cache@v3
      with:
        path: ~/.dotnet
        key: ${{ runner.os }}-dotnet-${{ hashFiles('global.json') }}
        restore-keys: |
          ${{ runner.os }}-dotnet-

    - name: Setup .NET
      run: |
        if [ ! -d "~/.dotnet" ]; then
          wget https://dotnet.microsoft.com/download/dotnet/scripts/v1/dotnet-install.sh
          chmod +x dotnet-install.sh
          ./dotnet-install.sh --channel 8.0 --install-dir ~/.dotnet
        fi
      shell: bash

    - name: Add .NET to PATH
      run: echo "~/.dotnet" >> $GITHUB_PATH

    - name: Restore dependencies
      run: dotnet restore

    - name: Build solution
      run: dotnet build --no-restore --configuration Release

    - name: Run tests
      run: dotnet test --no-build --collect:"XPlat Code Coverage" --configuration Release

  deploy:
    needs: build-and-test
    runs-on: [self-hosted, ARM64, TradingBot]

    steps:
    - name: Deploy application
      run: |
        echo "Deploying on Raspberry Pi using self-hosted runner"
        # Comandos de deploy apropriados